package LangAliceVerify.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class RuleLists_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("\nimport java.io.File;\nimport java.lang.reflect.Type;\nimport java.util.ArrayList;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport test.model.*;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\npublic class Main {\n    public static void main(String args[]) {\n\n        try {\n            ObjectMapper om = new ObjectMapper();\n            Root root = om.readValue(new File(\"test.json\"), Root.class);\n ");
    for (SNode elem : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.rules$9VXq))) {
      tgs.newLine();
      tgs.indent();
      tgs.appendNode(elem);
      if ((SNodeOperations.getNextSibling(elem) != null)) {
        tgs.append(" ");
      }
    }
    tgs.append("//other code \n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n    }\n    \n    public static void testMultiValue(Root root){\n        Integer x = Integer.parseInt(root.rentDetail.baserent);\n        ArrayList<OtherFee> y = root.rentDetail.otherFees;\n        Integer z = Integer.parseInt(root.rentDetail.totalRent);\n        if (x == null || y == null || z == null) {\n            return;\n        }\n        for (int i = 0; i < y.size(); i++){\n            x += Integer.parseInt(y.get(i).amount);\n        }        if (!x.equals(z)) {\n            System.out.println(\"The summary of all sub fees DOES NOT equal to the Total rent\");\n        }\n    }\n}");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink rules$9VXq = MetaAdapterFactory.getContainmentLink(0xb9a2040838d24f4bL, 0xa8f420ff93d9ed3aL, 0x5c9a2fcfca3cee28L, 0x5c9a2fcfca42f3f0L, "rules");
  }
}
