package LangAliceVerify.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Obj;
  private ConceptPresentation props_ObjRef;
  private ConceptPresentation props_ObjectRule;
  private ConceptPresentation props_RegexRule;
  private ConceptPresentation props_RentSumRule;
  private ConceptPresentation props_Rule;
  private ConceptPresentation props_RuleLists;
  private ConceptPresentation props_ValueRule;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Obj:
        if (props_Obj == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Obj = cpb.create();
        }
        return props_Obj;
      case LanguageConceptSwitch.ObjRef:
        if (props_ObjRef == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xb9a2040838d24f4bL, 0xa8f420ff93d9ed3aL, 0x5c9a2fcfca3fa11eL, 0x5c9a2fcfca4348cfL, "field", "", "");
          props_ObjRef = cpb.create();
        }
        return props_ObjRef;
      case LanguageConceptSwitch.ObjectRule:
        if (props_ObjectRule == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ObjectRule");
          props_ObjectRule = cpb.create();
        }
        return props_ObjectRule;
      case LanguageConceptSwitch.RegexRule:
        if (props_RegexRule == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("RegexRule");
          props_RegexRule = cpb.create();
        }
        return props_RegexRule;
      case LanguageConceptSwitch.RentSumRule:
        if (props_RentSumRule == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("RentSumRule");
          props_RentSumRule = cpb.create();
        }
        return props_RentSumRule;
      case LanguageConceptSwitch.Rule:
        if (props_Rule == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Rule = cpb.create();
        }
        return props_Rule;
      case LanguageConceptSwitch.RuleLists:
        if (props_RuleLists == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_RuleLists = cpb.create();
        }
        return props_RuleLists;
      case LanguageConceptSwitch.ValueRule:
        if (props_ValueRule == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("ValueRule");
          props_ValueRule = cpb.create();
        }
        return props_ValueRule;
    }
    return null;
  }
}
