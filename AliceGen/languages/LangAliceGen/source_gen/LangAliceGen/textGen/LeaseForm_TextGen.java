package LangAliceGen.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;

public class LeaseForm_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append("{");
    tgs.newLine();
    tgs.append("\"LeaseTitle\":");
    tgs.append(" \"");
    tgs.append(SPropertyOperations.getString(ctx.getPrimaryInput(), PROPS.name$MnvL));
    tgs.append("\",");
    tgs.newLine();
    tgs.append("\"Lessors\":");
    tgs.append("[");
    tgs.newLine();
    for (SNode elem_11 : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.lessors$FkIp))) {
      tgs.newLine();
      tgs.indent();
      tgs.appendNode(elem_11);
      if ((SNodeOperations.getNextSibling(elem_11) != null)) {
        tgs.append(", ");
      }
    }
    tgs.newLine();
    tgs.append("],");
    tgs.newLine();
    tgs.append("\"Lessees\": ");
    tgs.append("[");
    tgs.newLine();
    for (SNode elem_12 : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.lessees$s2MP))) {
      tgs.newLine();
      tgs.indent();
      tgs.appendNode(elem_12);
      if ((SNodeOperations.getNextSibling(elem_12) != null)) {
        tgs.append(", ");
      }
    }
    tgs.newLine();
    tgs.append("],");
    tgs.newLine();
    tgs.indent();
    tgs.append("\"RentalUnit\": ");
    tgs.newLine();
    tgs.indent();
    tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.rentalUnit$8E3l));
    tgs.newLine();
    tgs.indent();
    tgs.append("    ");
    tgs.newLine();
    tgs.indent();
    tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.term$DdDp));
    tgs.append(",");
    tgs.newLine();
    tgs.indent();
    tgs.append("\"RentDetail\":");
    tgs.newLine();
    tgs.indent();
    tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.rent$tepR));
    tgs.newLine();
    tgs.indent();
    for (SNode elem_13 : ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.deposit$ln6U))) {
      tgs.newLine();
      tgs.indent();
      tgs.appendNode(elem_13);
      if ((SNodeOperations.getNextSibling(elem_13) != null)) {
        tgs.append(", ");
      }
    }
    tgs.newLine();
    tgs.append("}");
  }

  private static final class PROPS {
    /*package*/ static final SProperty name$MnvL = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink lessors$FkIp = MetaAdapterFactory.getContainmentLink(0x533d0166ce6841a9L, 0xb1ee5d3b6bc37f42L, 0x2e6e221786c5f230L, 0x2e6e221786cac1c3L, "lessors");
    /*package*/ static final SContainmentLink lessees$s2MP = MetaAdapterFactory.getContainmentLink(0x533d0166ce6841a9L, 0xb1ee5d3b6bc37f42L, 0x2e6e221786c5f230L, 0x2e6e221786cac60bL, "lessees");
    /*package*/ static final SContainmentLink rentalUnit$8E3l = MetaAdapterFactory.getContainmentLink(0x533d0166ce6841a9L, 0xb1ee5d3b6bc37f42L, 0x2e6e221786c5f230L, 0x2e6e221786cad003L, "rentalUnit");
    /*package*/ static final SContainmentLink term$DdDp = MetaAdapterFactory.getContainmentLink(0x533d0166ce6841a9L, 0xb1ee5d3b6bc37f42L, 0x2e6e221786c5f230L, 0x2e6e221786cad87eL, "term");
    /*package*/ static final SContainmentLink rent$tepR = MetaAdapterFactory.getContainmentLink(0x533d0166ce6841a9L, 0xb1ee5d3b6bc37f42L, 0x2e6e221786c5f230L, 0x2e6e221786cadd15L, "rent");
    /*package*/ static final SContainmentLink deposit$ln6U = MetaAdapterFactory.getContainmentLink(0x533d0166ce6841a9L, 0xb1ee5d3b6bc37f42L, 0x2e6e221786c5f230L, 0x2e6e221786cae24bL, "deposit");
  }
}
